version: "3.8"
networks:
  roboshop:
    driver: bridge
volumes:
# This is equivalent to docker volume create [volume-name]. these are named volumes
  mysql:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /root/mysql
  redis:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /root/redis
  rabbitmq:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /root/rabbitmq
  mongodb:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /root/mongodb
services:
 web:
  image: vkandula650/web:v1
  container_name: web
  ports:
    - "80:80"
  depends_on:
   - catalogue
   - user
   - mongodb
   - cart
   - shipping
 user:
  image: vkandula650/user:v1
  container_name: user
 catalogue:
  image: vkandula650/catalogue:v1
  container_name: catalogue
  depends_on: 
   - mongodb
 mongodb:
  image: vkandula650/mongodb:v1
  container_name: mongodb
  volumes:
   - mongodb:/data/db
 Redis:
  image: redis:latest
  volumes:
    - redis:/data
 cart:
  image: vkandula650/cart:v1
  container_name: cart
  depends_on: 
   - catalogue
   - Redis
 Mysql:
  image: vkandula650/mysql:v1
  container_name: mysql
  volumes:
    - mysql:/var/lib/mysql
 shipping:
  image: techworldwithsiva/shipping:k8
  container_name: shipping
  depends_on: 
   - Mysql
 rabbitmq:
  image: rabbitmq
  container_name: rabbitmq
  volumes:
    - rabbitmq:/var/lib/rabbitmq
 payment:
  image: vkandula650/payment:v1
  container_name: payment
  depends_on: 
   - rabbitmq
 ratings:
  image: vkandula650/ratings:v1
  container_name: ratings
  depends_on:
   - Mysql
